with import <nixpkgs> { };

with lib;

let 
    urlize = { owner, repo, ... }: "https://github.com/${owner}/${repo}.git";

    fetch = { owner, repo, sha256, rev ? "HEAD", name ? repo, ... }: fetchgit {
        url = urlize { inherit owner repo; };

        fetchSubmodules = true;
        deepClone = true;

        inherit sha256 rev name;
    };

    add-submodule = plugin: let 
        nameify = { repo, name ? repo, ...}: name;
        name = nameify plugin;
    in ''
        plugin=${fetch plugin}

        echo "Processing ${name}: $plugin"
        
        cp -R $plugin ${name}
        git submodule add ${urlize plugin} ${name}
    '';
in runCommand "dist" {
    nativeBuildInputs = [ git ];
    src = ./..;
} ''
    mkdir -p $out/.plugins/pack/repositories/{start,opt}

    cp -R $src/{config,init}.vim $src/plugins $out

    cd $out

    git init

    # Plugins part
    cd .plugins/pack/repositories/start

    ${builtins.concatStringsSep "\n" (imap0 (_: add-submodule) (callPackage ../plugins {}))}
    
    cd -

    # Header part
    echo "\" minimal setup, generated by NIX
    set nocompatible

    set packpath-=~/.vim/after
    set packpath+=~/.config/nvim/.plugins
    set packpath+=~/.vim/after

    filetype indent plugin on | syn on
    " | cat - init.vim > init.vim.tmp

    mv init.vim.tmp init.vim

    cd -
''
